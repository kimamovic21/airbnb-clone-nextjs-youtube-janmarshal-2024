Create an Airbnb Clone with Next.js 14, Kinde, Supabase, Prisma and Tailwind


Next.js app installation

-open web page: https://nextjs.org
-type command npx create-next-app@latest .
-update Next.js app to version 14, React 18 and Tailwind CSS 3
-type command: npm run dev
-open route: http://localhost:3000/


Shadcn ui installation

-open web page: https://ui.shadcn.com/
-type command: npx shadcn@latest init
-type command: npx shadcn@latest add button
-open link: https://ui.shadcn.com/themes
-copy code from documentation and paste it in globals.css file


Navbar component

-in folder app create folder components
-in folder components create components Navbar.tsx
-in component layout.tsx import component Navbar from component Navbar.tsx
-in component Navbar.tsx import components Link and Image
-create component UserNav.tsx and function UserNav()
-open link: https://ui.shadcn.com/docs/components/dropdown-menu
-type command: npx shadcn@latest add dropdown-menu
-in component UserNav.tsx import dropdown components from component dropdown-menu.tsx
-in jsx add dropdown components
-in component Navbar.tsx import component UserNav from component UserNav.tsx


Setting up Auth

-open web page: https://kinde.com
-create new business app
-open link: https://docs.kinde.com/
-type command: npm i @kinde-oss/kinde-auth-nextjs
-create files .env and example.env and env variables
-create folders api/auth/[kindeAuth] and route.ts file
-in route.ts file import function handleAuth from package kinde
-create and export variable GET
-in component UserNav.tsx import functions RegisterLink, LoginLink and LogoutLink from package kinde
-import function getKindeServerSession from package kinde
-destructure variable const { getUser }
-create variable const user
-add to function UserNav keyword async
-in component DropdownMenuContent add ternary operator for variable user
-open route: http://localhost:3000 and register
-open route: http://localhost:3000 and login
-http://localhost:3000 and logout


Creating Filter Bar

-in folder components create component MapFilterItems.tsx
-in component app/page.tsx import component MapFilterItems from component MapFilterItems.tsx
-in folder app create folder lib and categoryItems.ts file
-in categoryItems.ts file create interface iAppProps
-create and export array categoryItems with type iAppProps[]
-in component MapFilterItems.tsx import array categoryItems from categoryItems.ts file
-in jsx, in parent div element invoke function categoryItems?.map()
-import components Link and Image
-in next.config.mjs file add object images
-in globals.css file add style for class .no-scrollbar
-in component MapFilterItems.tsx add directive 'use client'
-import functions usePathname and useSearchParams from package next/navigation
-create variable const searchParams
-create variables const searchParams, const search and const pathname
-import function useCallback from package react
-create function createQueryString()
-add to component Link dynamic href
-import function cn from lib/utils.ts file
-open route: http://localhost:3000/
-open route: http://localhost:3000/?filter=trending


Setting up Supabase database & Prisma

-open web page: https://supabase.com
-open Supabase organization and create project
-open web page: https://www.prisma.io/
-type command: npm i -D prisma  
-type command: npm i @prisma/client
-type command: npx prisma db push
-in .env file create variables DATABASE_URL and DIRECT_URL
-open link: https://www.prisma.io/docs/orm/more/help-and-troubleshooting/nextjs-help
-in folder lib create db.ts file
-in db.ts file copy code from documentation
-in folder auth create folder creation and route.ts file
-in route.ts file create and export async function GET()
-type command: npx prisma studio
-open route: http://localhost:3000 and register
-open route: http://localhost:3000 and login


Creating a Home

-in schema.prisma file create model Home
-add relation between models User and Home
-open route: http://localhost:3000
-type command: npx prisma db push
-open Supabase project to see tables
-in folder ap create folders create, [id] and component page.tsx
-in folder [id] create component layout.tsx
-open route: http://localhost:3000/create/[id]/structure
-in folder components create component SelectCategory and function SelectCategory()
-import array categoryItems from categoryItems.ts file
-open link: https://ui.shadcn.com/docs/components/card
-type command: npx shadcn@latest add card
-in component structure/page.tsx import component SelectCategory from components/SelectCategory.tsx
-in folder app create actions.ts file
-in actions.ts file add directive 'use server'
-create and export async function createAirbnbHome()
-in component UserNav.tsx import function createAirbnbHome from actions.ts file
-create variable const createHomeWithId
-in jsx, in form element add event actions and pass function createAirbnbHome
-open route: http://localhost:3000/ and click button Airbnb your Home
-in folder [id] create folder description and component page.tsx
-in component [id]/page.tsx create and export function DescriptionPage()
-in actions.ts file create async function createCategoryPage()
-in component SelectCategory.tsx create input element with attributes
-in component structure/page.tsx, add to function StructurePage() parameter params
-in jsx create input element with attributes
-import function createCategoryPage from actions.ts file
-in jsx add to form element attribute action
-in folder components create component SubmitButtons.tsx
-in component SubmitButtons.tsx create and export function CreationSubmit()
-in component structure/page.tsx import component CreationSubmit from component SubmitButtons.tsx
-type command: npx prisma studio
-open route: http://localhost:3000/create/[id]/structure
-install shadcn components Label, Input, Textarea and Select
-in component description/page.tsx create form element
-open route: http://localhost:3000/create/[id]/description
-in folder components create component Counter.tsx and function Counter()
-in component description/page.tsx import component Counter from folder components/Counter.tsx
-create div elements for rental information
-in folder components create component CreationBottomBar.tsx and function CreationBottomBar()
-in component structure/page.tsx import component CreationBottomBar from folder components/CreationBottomBar.tsx
-in actions.ts file create and export async function createDescription()
-in component structure/page.tsx import function createDescription from actions.ts file
-in jsx add to form element event action
-open link: https://supabase.com/docs/reference/javascript/typescript-support
-type command: npm i @supabase/supabase-js
-in folder lib create supabase.ts file
-in supabase.ts file create and variable const supabase
-in .env file create variables SUPABASE_URL and SUPABASE_ANON_KEY
-open Supabase project and create bucket images
-in actions.ts file import object supabase from supabase.ts file
-open route: http://localhost:3000/create/[id]/description
-in folder [id] create folder address and component page.tsx
-in component address/page.tsx create and export function AddressPage()
-in actions.ts file create and export async function createLocation()
-open route: http://localhost:3000/create/[id]/address
-in component AddressPage.tsx import function createLocation from actions.ts file
-open link: https://www.npmjs.com/package/world-countries
-type command: npm i world-countries
-in folder lib create getCountries.ts file
-in getCountries.ts file import array countries from package world-countries
-create and export function useCountries()
-in component address/page.tsx import function useCountries from getCountries.ts file
-in component SelectGroup invoke function getAllCountries()?.map()
-open link: https://www.npmjs.com/package/react-leaflet
-type command: npm i leaflet react-leaflet
-type command: npm i -D @types/leaflet
-in folder component create component Map.tsx and function Map()
-import components from package react-leaflet
-open link: https://ui.shadcn.com/docs/components/skeleton
-type command: npx shadcn@latest add skeleton
-in component address/page.tsx import component Map from component components/Map.tsx
-in actions.ts file create and export async function createLocation()
-in component address/page.tsx import function createLocation from actions.ts file
-create function LazyMap()


Create Index Page (listings)

-in folder components create component ListingCard.tsx
-in component app/page.tsx create async function getData()
-create variable const data
-in parent div element create div element and invoke function data?.map()
-in component ListingCard.tsx create interface iAppProps
-destructure variable const { getCountryByValue }
-create variable const country
-in component app/page.tsx create function ShowItems()
-import component Suspense from package react
-in function HomePage add component Suspense
-create function SkeletonLoading()
-in folder components create component SkeletonCard.tsx
-in component app/page.tsx import component SkeletonCard from components/SkeletonCard.tsx
-in folder components create component NoItems.tsx and function NoItems()
-in component app/page.tsx import component NoItems from components/NoItems.tsx
-http://localhost:3000


Favorites

-in schema.prisma file create model Favorites
-type command: npx prisma generate
-in component app/page.tsx destructure variable const { getUser }
-create variable const user
-in component ListingCard.tsx, in jsx add conditional rendering userId &&
-in component SubmitButtons.tsx create and export functions AddToFavoriteButton() and DeleteFromFavoriteButton()
-in component ListingCard.tsx import functions AddToFavoriteButton() and DeleteFromFavoriteButton() from SubmitButtons.tsx file
-in jsx add ternary condition isInFavoriteList ? 
-in actions.ts file create and export async functions deleteFromFavorite and addToFavorite 
-in component ListingCard.tsx import functions deleteFromFavorite and addToFavorite from actions.ts file
-in folder app create folder favorites and component page.tsx
-in component favorites/page.tsx create and export async function FavoritesPage
-create function getData()
-open route: http://localhost:3000/favorites
-in folder favorites create component loading.tsx and function FavoritesLoading()
-in folder app create folder my-homes and component page.tsx
-in component my-homes/page.tsx create and export function MyHomesPage() as default
-open route: http://localhost:3000/my-homes
-create async function getData()
-create variable const data
-in function MyHomesPage() destructure function const { getUser }
-create variable const user
-add condition if (!user) 
-create variable const user
-import components ListingCard.tsx and NoItems.tsx
-in jsx add ternary condition data.length === 0 
-in folder my-homes create component loading.tsx 
-in component loading.tsx create and export function MyHomesLoading() as default


Rental Id Page

-in folder app create folders home, [id] and component page.tsx
-in component [id]/page.tsx create and export async function RentalDetailsPage()
-create async function getData()
-open route http://localhost:3000/home/[id]
-in function RentalDetailsPage() create variable const data
-destructure function { getCountryByValue }
-create variable const country
-open link: https://ui.shadcn.com/docs/components/separator
-type command: npx shadcn@latest add separator
-in folder components create component CategoryShowcase.tsx and function CategoryShowcase()
-in component CategoryShowcase.tsx import array categoryItems
-create variable const category
-in component [id]/page.tsx import component CategoryShowcase from component CategoryShowcase.tsx
-in folder components create component HomeMap.tsx and function HomeMap()
-in component [id]/page.tsx import component HomeMap from component HomeMap.tsx
-open link: https://www.npmjs.com/package/react-date-range
-type command: npm i react-date-range
-type command: npm i --save-dev @types/react-date-range
-in folder components create component SelectCalendar.tsx
-in component [id]/page.tsx import component SelectCalendar from component SelectCalendar.tsx


Reservation System

-in schema.prisma file create model Reservation
-type command: npx prisma db push
-in actions.ts file create and export async function createReservation()
-in component home/[id]/page.tsx create form element for reservation
-in component SubmitButtons.tsx create and export function ReservationSubmitButton()
-in component home/[id]/page.tsx import component ReservationSubmitButton from component SubmitButtons.tsx
-open route: http://localhost:3000/home/[id] and click reservation button
-in folder app create folder reservations and component page.tsx
-in component reservations/page.tsx create and export async function ReservationPage()
-create async function getData()
-open route: http://localhost:3000/reservations
-in folder reservations create component loading.tsx 
-in component loading.tsx create and export function ReservationsLoading()
-in folder
-in folder home/[id] create component loading.tsx
-in component loading.tsx create and export function RentalDetailsLoading()


Search Modal

-in folder components create component SearchModal.tsx and function SearchModal()
-open link: https://ui.shadcn.com/docs/components/dialog
-in component Navbar.tsx import component SearchModal from component SearchModal.tsx
-open route: http://localhost:3000/ and lick search modal